3. SELECT Products.productname, shippers.shippername
   FROM (((Orderdetails
   INNER JOIN orders ON orders.ordeid=orderdtails.orderid)
   INNER JOIN products ON products.productid=orderdetails.productid)
   INNER JOIN shippers ON shippers.shipperid=orders.shipperid)

5. SELECT * FROM Customers  
   WHERE CustomerName LIKE '%son%';

9. SELECT sum(orderdetails.quantity * products.price) as totalsales
   FROM Orderdetails
   INNER JOIN products ON products.productid=orderdetails.productid

2. SELECT orders.orderid, orders.orderdate, customers.customername, customers.city, customers.address, customers.postalcode,             shippers.shippername, 
   products.productname, orderdetails.quantity
   FROM  ((((orderdetails
   INNER JOIN orders ON orders.orderid=orderdetails.orderid)
   INNER JOIN customers ON customers.customerid=orders.customerid)
   INNER JOIN shippers ON shippers.shipperid=orders.shipperid)
   INNER JOIN products ON products.productid=orderdetails.productid)
4. SELECT Shippers.ShipperName,COUNT(Orders.OrderID) AS NumberOfOrders FROM Orders
   LEFT JOIN Shippers ON Orders.ShipperID = Shippers.ShipperID
   GROUP BY ShipperName;

7. SELECT customers.customername, sum(orderdetails.quantity * products.price) AS totalspent
   FROM (((orderdetails
   INNER JOIN orders ON orders.orderid=orderdetails.orderid)
   INNER JOIN products ON products.productid=orderdetails.productid)
   INNER JOIN customers ON customers.customerid=orders.customerid)
   group by customername 

8. SELECT TOP 1 suppliers.suppliername, sum(orderdetails.quantity) 
   FROM ((orderdetails
   INNER JOIN products ON products.productid=orderdetails.productid)
   INNER JOIN suppliers ON suppliers.supplierid=products.supplierid)
   GROUP BY suppliers.suppliername order by sum(orderdetails.quantity)  desc;


postgres task:
1. SELECT products.name, sum(products.selling_price * sales.quantity) as total_sales
	FROM sales
	join products on products.id=sales.pid
	group by products.name
	order by total_sales desc;

1b. SELECT products.name, sales.id, sales.created_at,
((products.selling_price * sales.quantity) - (products.buying_price * sales.quantity))
as profit
	FROM sales
	join products on products.id=sales.pid
	order by profit desc;

tatal_sales: SELECT products.name, sum(sales.quantity) as total_quantity
             FROM sales
             join products on products.id=sales.pid
             GROUP BY products.name
             ORDER BY total_quantity desc;



remaining_stock = SELECT products.name, products.stock_quantity - sum(sales.quantity)
                  from sales 
                  join products on products.id=sales.pid
                  group by products.id

sales_returns: SELECT products.name, returns.reasons
               from returns
               join sales on sales.id=returns.said
               join products on products.id=sales.pid


highest_supplier: SELECT suppliers.name, sum(products.stock_quantity) total_supplied
                  from products
                  join suppliers on suppliers.id=products.sid
                  group by suppliers.name
                  order by total_supplied desc